------Query: Create 3 new dojos
INSERT INTO dojos (name)
VALUES ('Blue'),('Green'),('Pink');

SELECT * FROM dojos;


-----Query: Delete the 3 dojos you just created
DELETE FROM dojos WHERE id = 1;
DELETE FROM dojos WHERE id = 2;
DELETE FROM dojos WHERE id = 3;

SELECT * FROM dojos;


-----Query: Create 3 more dojos
INSERT INTO dojos (name)
VALUES ('Pink'),('Rose'),('Salmon');

SELECT * FROM dojos;


-----Query: Create 3 ninjas that belong to the first dojo
INSERT INTO ninjas (first_name, last_name, age, dojo_id)
VALUES ('Regina', 'George', 20, 5),
('Gretchen', 'Wieners', 21, 5),
('Karen', 'Smith', 22, 5);

SELECT * FROM ninjas;
        (note to self, since ID 1-3 were deleted earlier, it does not 
        restart the number ID. It just continues. New 1 is 4, etc.)


-----Query: Create 3 ninjas that belong to the third dojo
INSERT INTO ninjas (first_name, last_name, age, dojo_id)
VALUES ('Cady', 'Heron', 19, 6),
('Janis', 'Ian', 23, 6),
('Damian', 'Leigh', 18, 6);

SELECT * FROM ninjas;


-----Query: Retrieve all the ninjas from the first dojo
SELECT * FROM ninjas
WHERE dojo_id=5;


-----Query: Retrieve the last ninja's dojo
SELECT * FROM ninjas
WHERE dojo_id=6;


-----Query: Use a JOIN to retrieve the ninja with id 6 as well as the data from its dojo. 
     Be sure to do this in one query using a join statement.
SELECT * FROM dojos
JOIN ninjas ON dojos.id = ninjas.dojo_id
WHERE dojos.id=6;


-----Query: Use a JOIN to retrieve all the ninjas as well as that ninja's dojo, note, 
you will see repeated data on dojos as a dojo can have many ninjas! 
SELECT * FROM dojos
LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id

